service: brickly-serverless

provider:
  name: aws
  runtime: python3.9
  region: ap-south-1
  stage: ${opt:stage}
  timeout: 10
  environment:
    STAGE: ${opt:stage}
    ENVIRONMENT: ${upper(${opt:stage})}
    DB_HOST: ${self:custom.environment.DB_HOST.${self:provider.stage}}
    DB_USER: ${self:custom.environment.DB_USER.${self:provider.stage}}
    DB_NAME: ${self:custom.environment.DB_NAME.${self:provider.stage}}
  iam:
    role: ${env:IAM_ROLE_ARN}

custom:
  serverless-offline:
    noPrependStageInUrl: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      inMemory: true
  sns:
    port: 4002
    debug: true
  environment:
    DB_HOST:
      dev: "brickly-database-dev.cv7vbjo3n63b.ap-south-1.rds.amazonaws.com"
    DB_USER:
      dev: "brickly_admin"
    DB_NAME:
      dev: "brickly_database_dev"
  pythonRequirements:
    dockerizePip: true

functions:
  app:
    handler: main.handler
    url: true
    events:
      - http:
          method: ANY
          path: /{proxy+}
  create_database:
    handler: services.database.create_database
    events:
      - http:
          path: /function_create_database
          method: get
      - schedule: cron(0 23 ? * MON-FRI *)

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-plugin-utils
  - serverless-offline-sns
  - serverless-dynamodb-local

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!env/**'
    - '!package.json'
    - '!package-lock.json'
    - '!requirements.txt'
    - '!.serverless/**'
  

resources:
  Resources:
    OTPTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: OTP
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: timeToLive
          Enabled: true
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1